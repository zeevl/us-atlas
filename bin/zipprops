#!/usr/bin/env node

var fs = require("fs");

var collection = JSON.parse(fs.readFileSync("/dev/stdin")),
    spliceIndex = +process.argv[2],
    targetGeometry = {type: "", coordinates: []};

collection.features.forEach(function(feature, i) {
  if (i === spliceIndex) return;
  var sourceGeometry = feature.geometry;
  if (!sourceGeometry) return; // ignore null

  var sourceType = sourceGeometry.type,
      targetType = /^Multi/.test(sourceType) ? sourceType : "Multi" + sourceType;

  if (!targetGeometry.type) targetGeometry.type = targetType;
  else if (targetGeometry.type !== targetType) throw new Error("incompatible types: " + targetType + " != " + targetGeometry.type);

  switch (sourceType) {
    case "MultiPolygon":
    case "MultiLineString": {
      sourceGeometry.coordinates.forEach(function(coordinates) { targetGeometry.coordinates.push(coordinates); });
      break;
    }
    case "Polygon":
    case "LineString": {
      targetGeometry.coordinates.push(sourceGeometry.coordinates);
      break;
    }
    default: {
      throw new Error("unsupported type: " + g.type);
    }
  }
});

console.log(JSON.stringify(targetGeometry));
